name: Validate PR Title

on: 
  pull_request:
    types: [ opened, reopened, edited, synchronize ]
    branches: [ test, main ]

permissions:
  contents: read
  pull-requests: write

jobs:
  validate_pr_title:
    name: Validate PR title
    runs-on: ubuntu-latest
    steps:
      - name: Check out repo
        uses: actions/checkout@v4.1.1
        with:
          sparse-checkout: |
            .github/workflows/main.yml
            .github/workflows/validate-pr-title.yml

      - name: Validating
        id: validate_pr_title
        shell: bash
        run: |
            echo "Checking PR title"
            echo "PR Title: ${{ github.event.pull_request.title }}"
            echo Target branch is ${{ github.base_ref }}.

            trimmed_pr_title=$(echo "${{ github.event.pull_request.title }}" | tr -d ' ' | xargs)
            is_pr_valid="true"
            error_message=""

            if [[ $trimmed_pr_title =~ test && ${{ github.event.pull_request.base.ref }} != "test" ]] || [[ $trimmed_pr_title =~ prod && ${{ github.event.pull_request.base.ref }} != "main" ]]; then
              is_pr_valid="false"
              error_message="Error: Your branch name '${{ github.event.pull_request.title }}' does not match the expected target branch '${{ github.base_ref }}'"
              echo "$error_message" >> $GITHUB_STEP_SUMMARY
            fi

            Regex="^(bugfix|feature)-AB#([0-9]+)-.*-(test|prod)"

            if [[ ! $trimmed_pr_title =~ $Regex ]]; then
              is_pr_valid="false"
              error_message="Error: Invalid PR title! Your PR Title must match the format: ${{ github.event.pull_request.title }} ==> bugfix/feature - AB#{ticket number} - name - description - test/prod"
              echo "$error_message" >> $GITHUB_STEP_SUMMARY
            fi

            echo "is_pr_valid=$is_pr_valid" >> $GITHUB_OUTPUT
            echo "error_message=$error_message" >> $GITHUB_OUTPUT

      - name: Post Comment if Error
        if: ${{ steps.validate_pr_title.outputs.is_pr_valid == 'false' }}
        uses: actions/github-script@v7.0.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          result-encoding: string
          script: |
            const output = `
            <details><summary>PR title validation failed☹️</summary>
            ${{ steps.validate_pr_title.outputs.error_message }}
            `;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Stop the PR merging if Error
        if: ${{ steps.validate_pr_title.outputs.is_pr_valid == 'false' }}
        run: |
          echo "Validation Failed for PR Title: '${{ github.event.pull_request.title }}'."
          exit 1
